[{"path":"/articles/01-data-collection-process.html","id":"web-scraping","dir":"Articles","previous_headings":"","what":"Web Scraping","title":"01 - Data Collection Process","text":"always updated list 2022 2023 links High Volume -Hire Vehicles documents let’s scrape TLC Trip Record Data using rvest library. page also can find link download codes related Zone.","code":"SourcePage <-   rvest::read_html(\"https://www.nyc.gov/site/tlc/about/tlc-trip-record-data.page\")  TripLinks <-   SourcePage |>   rvest::html_elements(xpath = '//div[@class=\"faq-answers\"]//li/a') |>   rvest::html_attr(\"href\") |>   grep(pattern = \"fhvhv_[a-z]+_202[23]-\\\\d{2}\\\\.parquet\", value = TRUE) |>   trimws() |>   sort()  FileNames <- basename(TripLinks)  FileNames #>  [1] \"fhvhv_tripdata_2022-01.parquet\" \"fhvhv_tripdata_2022-02.parquet\" #>  [3] \"fhvhv_tripdata_2022-03.parquet\" \"fhvhv_tripdata_2022-04.parquet\" #>  [5] \"fhvhv_tripdata_2022-05.parquet\" \"fhvhv_tripdata_2022-06.parquet\" #>  [7] \"fhvhv_tripdata_2022-07.parquet\" \"fhvhv_tripdata_2022-08.parquet\" #>  [9] \"fhvhv_tripdata_2022-09.parquet\" \"fhvhv_tripdata_2022-10.parquet\" #> [11] \"fhvhv_tripdata_2022-11.parquet\" \"fhvhv_tripdata_2022-12.parquet\" #> [13] \"fhvhv_tripdata_2023-01.parquet\" \"fhvhv_tripdata_2023-02.parquet\" #> [15] \"fhvhv_tripdata_2023-03.parquet\" \"fhvhv_tripdata_2023-04.parquet\" #> [17] \"fhvhv_tripdata_2023-05.parquet\" \"fhvhv_tripdata_2023-06.parquet\" #> [19] \"fhvhv_tripdata_2023-07.parquet\" \"fhvhv_tripdata_2023-08.parquet\" #> [21] \"fhvhv_tripdata_2023-09.parquet\" \"fhvhv_tripdata_2023-10.parquet\" #> [23] \"fhvhv_tripdata_2023-11.parquet\" TaxiZoneLink <-   SourcePage |>   rvest::html_elements(xpath = '//ul/li/a[text()=\"Taxi Zone Lookup Table\"]')  |>   rvest::html_attr(\"href\") |>   trimws()  TaxiZoneLink #> [1] \"https://d37ci6vzurychx.cloudfront.net/misc/taxi+_zone_lookup.csv\""},{"path":"/articles/01-data-collection-process.html","id":"saving-files","dir":"Articles","previous_headings":"","what":"Saving files","title":"01 - Data Collection Process","text":"take advantage best capacities arrow need save parquet file folder useful information filter later, one folder level related years next sub-folders related month parquet name part-0.parquet following next process: Creating main folder store data. Defining new folder save trip data parquet files. Defining sub-folders split files based year. Creating folder month. Downloading file folder.","code":"RawDataPath <- here::here(\"raw-data\")  if(!\"raw-data\" %in% dir(here::here())) dir.create(RawDataPath)  RawDataPath #> [1] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data\" ParquetFolderPath <- file.path(RawDataPath, \"trip-data\")  if(!\"trip-data\" %in% dir(RawDataPath)) dir.create(ParquetFolderPath)  ParquetFolderPath #> [1] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data\" YearFolders <- gsub(   x = FileNames,   pattern = \"^fhvhv_tripdata_|-\\\\d{2}\\\\.parquet$\",   replacement = \"\" ) |>   paste0(\"year=\", a = _)  YearFoldersUnique <- unique(YearFolders) YearFoldersPath <- file.path(ParquetFolderPath, YearFoldersUnique)  for(year_i in YearFoldersPath) dir.create(year_i) #> Warning in dir.create(year_i): 'C:\\Users\\anfeliz\\Particular #> Projects\\project.nyc.taxi\\raw-data\\trip-data\\year=2022' already exists #> Warning in dir.create(year_i): 'C:\\Users\\anfeliz\\Particular #> Projects\\project.nyc.taxi\\raw-data\\trip-data\\year=2023' already exists  YearFoldersPath #> [1] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2022\" #> [2] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2023\" MonthFolders <- gsub(   x = FileNames,   pattern = \"^fhvhv_tripdata_\\\\d{4}-|\\\\.parquet$\",   replacement = \"\" ) |>   paste0(\"month=\", a = _)  MonthFoldersPath <- file.path(ParquetFolderPath, YearFolders, MonthFolders)  for(month_i in MonthFoldersPath) dir.create(month_i, showWarnings = FALSE)  MonthFoldersPath #>  [1] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2022/month=01\" #>  [2] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2022/month=02\" #>  [3] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2022/month=03\" #>  [4] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2022/month=04\" #>  [5] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2022/month=05\" #>  [6] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2022/month=06\" #>  [7] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2022/month=07\" #>  [8] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2022/month=08\" #>  [9] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2022/month=09\" #> [10] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2022/month=10\" #> [11] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2022/month=11\" #> [12] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2022/month=12\" #> [13] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2023/month=01\" #> [14] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2023/month=02\" #> [15] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2023/month=03\" #> [16] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2023/month=04\" #> [17] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2023/month=05\" #> [18] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2023/month=06\" #> [19] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2023/month=07\" #> [20] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2023/month=08\" #> [21] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2023/month=09\" #> [22] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2023/month=10\" #> [23] \"C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data/trip-data/year=2023/month=11\" # Parquet files might time a longer time to be downloaded options(timeout = 1800)   # Parquet trip data for(link_i in seq_along(TripLinks)){      download.file(TripLinks[link_i],                 destfile = file.path(MonthFoldersPath[link_i],\"part-0.parquet\"),                 mode = \"wb\")    }   # Taxi Zone CSV download.file(TaxiZoneLink,               destfile = file.path(RawDataPath,\"taxi_zone_lookup.csv\"),               mode = \"wb\")"},{"path":"/articles/01-data-collection-process.html","id":"final-result","dir":"Articles","previous_headings":"","what":"Final result","title":"01 - Data Collection Process","text":"getting files end next structure data folder.","code":"fs::dir_tree(RawDataPath) #> C:/Users/anfeliz/Particular Projects/project.nyc.taxi/raw-data #> ├── taxi_zone_lookup.csv #> └── trip-data #>     ├── year=2022 #>     │   ├── month=01 #>     │   │   └── part-0.parquet #>     │   ├── month=02 #>     │   │   └── part-0.parquet #>     │   ├── month=03 #>     │   │   └── part-0.parquet #>     │   ├── month=04 #>     │   │   └── part-0.parquet #>     │   ├── month=05 #>     │   │   └── part-0.parquet #>     │   ├── month=06 #>     │   │   └── part-0.parquet #>     │   ├── month=07 #>     │   │   └── part-0.parquet #>     │   ├── month=08 #>     │   │   └── part-0.parquet #>     │   ├── month=09 #>     │   │   └── part-0.parquet #>     │   ├── month=10 #>     │   │   └── part-0.parquet #>     │   ├── month=11 #>     │   │   └── part-0.parquet #>     │   └── month=12 #>     │       └── part-0.parquet #>     └── year=2023 #>         ├── month=01 #>         │   └── part-0.parquet #>         ├── month=02 #>         │   └── part-0.parquet #>         ├── month=03 #>         │   └── part-0.parquet #>         ├── month=04 #>         │   └── part-0.parquet #>         ├── month=05 #>         │   └── part-0.parquet #>         ├── month=06 #>         │   └── part-0.parquet #>         ├── month=07 #>         │   └── part-0.parquet #>         ├── month=08 #>         │   └── part-0.parquet #>         ├── month=09 #>         │   └── part-0.parquet #>         ├── month=10 #>         │   └── part-0.parquet #>         └── month=11 #>             └── part-0.parquet"},{"path":"/articles/02-business-understanding.html","id":"project-name","dir":"Articles","previous_headings":"","what":"Project Name","title":"02 - Business Understanding","text":"Taxi Drivers Net Earnings.","code":""},{"path":"/articles/02-business-understanding.html","id":"problem-statement","dir":"Articles","previous_headings":"","what":"Problem Statement","title":"02 - Business Understanding","text":"problem taxi drivers’ net earnings high due lack strategy increasing tips.","code":""},{"path":"/articles/02-business-understanding.html","id":"project-scope","dir":"Articles","previous_headings":"","what":"Project Scope","title":"02 - Business Understanding","text":"project limited Juno, Uber, Via Lyft taxi drivers work New York City.","code":""},{"path":"/articles/02-business-understanding.html","id":"stakeholders","dir":"Articles","previous_headings":"","what":"Stakeholders","title":"02 - Business Understanding","text":"Taxi drivers Taxi companies Customers NYC Taxi Limousine Commission","code":""},{"path":"/articles/02-business-understanding.html","id":"top-process-definition","dir":"Articles","previous_headings":"","what":"Top Process Definition","title":"02 - Business Understanding","text":"define elements process, use SIPOC diagram.","code":"DiagrammeR::grViz(' digraph SIPOC {     rankdir=LR;     node [shape=box];     subgraph cluster_S {         label=\"Suppliers\";         S1 [label=\"Gas Station\"];         S2 [label=\"Car Manufacturer\"];         S3 [label=\"Taxi Application\"];         S4 [label=\"Telecomuncation\\nCompany\"];         S5 [label=\"Smartphone Supplier\"];         S6 [label=\"Maintenance\\nService Providers\"];     }     subgraph cluster_I {         label=\"Inputs\";         I1 [label=\"Gas\"];         I2 [label=\"Car\"];         I3 [label=\"Start\\nLocation\"];         I4 [label=\"End\\nLocation\"];         I5 [label=\"Internet\"];         I6 [label=\"Smartphone\"];         I7 [label=\"Customer\\nRequests\"];     }     subgraph cluster_P {         label=\"Process\";         P1 [label=\"The customer request a taxi\"];         P2 [label=\"The driver arrived at\\nthe pick-up location\"];         P3 [label=\"Drivers pick the customer up\"];         P4 [label=\"Drivers drive to destination\"];         P5 [label=\"Drivers leave the customer\\nat the end point\"];     }     subgraph cluster_O {         label=\"Outputs\";         O1 [label=\"The customer is picked up\\n at start location\"];         O2 [label=\"The customer recives a\\ntravel experience\"];         O3 [label=\"The Customer gets\\nat end location\"];         O4 [label=\"Payment Received\"]     }     subgraph cluster_C {         label=\"Customers\";         C1 [label=\"Taxi User\"];     }     S1 -> I1 [style=invis];     I1 -> P1 [style=invis];     P1 -> O1 [style=invis];     O1 -> C1 [style=invis];     P1 -> P2 [constraint=false];     P2 -> P3 [constraint=false];     P3 -> P4 [constraint=false];     P4 -> P5 [constraint=false]; }  ')"},{"path":"/articles/02-business-understanding.html","id":"project-objective","dir":"Articles","previous_headings":"","what":"Project Objective","title":"02 - Business Understanding","text":"objective project develop strategy select best paid trips possible increase tips thereby net earnings.","code":""},{"path":"/articles/02-business-understanding.html","id":"defining-metric","dir":"Articles","previous_headings":"","what":"Defining Metric","title":"02 - Business Understanding","text":"Based current information can say objective increase hourly wage received taxi driver defined following formula. \\[ \\text{Hourly Wage} = \\frac{\\text{Total Driver Pay} + \\text{Total Tips}}{\\text{Total Hours Worked}} \\]","code":""},{"path":"/articles/02-business-understanding.html","id":"data-to-use","dir":"Articles","previous_headings":"","what":"Data to Use","title":"02 - Business Understanding","text":"project, use subset data available TLC Trip Record Data 2022 2023 High Volume -Hire Vehicle columns described README.md file located data folder. Based variables available, can divide 2 categories: hvfhs_license_num dispatching_base_num originating_base_num request_datetime PULocationID DOLocationID trip_miles base_passenger_fare shared_request_flag access_a_ride_flag wav_request_flag wav_match_flag on_scene_datetime pickup_datetime dropoff_datetime trip_time tolls bcf sales_tax congestion_surcharge airport_fee tips driver_pay shared_match_flag","code":""},{"path":"/articles/02-business-understanding.html","id":"outcome-to-predict","dir":"Articles","previous_headings":"","what":"Outcome to predict","title":"02 - Business Understanding","text":"select better trips taxi driver needs clear best trips take, mean ones request less time get money. Based available data can calculate profit_rate dollars minute minimize time needed make money increasing consequence expected hourly wage long term. \\[ \\text{profit rate} = \\frac{\\text{driver pay} + \\text{tips}}{(\\text{dropoff datetime}-\\text{request datetime})/60} \\]","code":""},{"path":"/articles/02-business-understanding.html","id":"defining-metrics-base-line-simulation","dir":"Articles","previous_headings":"Outcome to predict","what":"Defining Metric’s Base Line (Simulation)","title":"02 - Business Understanding","text":"Defining baseline based data challenge data doesn’t unique id make estimation, can run simulation estimate value confident interval. simulation based following assumptions related taxi drivers: can start work zone Manhattan, Brooklyn Queens (active ones). work 8 12 hour every day. can start work month, weekday hour. just can take trips starting zone ending last trip maximum waiting time receiving new trip request 6 minutes. taxi driver find new trip first 6 minutes, can extend 6 minutes drive closest zone find new trip, doesn’t work next 6 minutes can drive zone current Borough. , apply next steps: Load environment use. Create connection parquet files without loading RAM. Use locations ids trips can estimate mean distance pear locations. Define named vectors can return closest location id locations ids dataset. Restrict location ids use ones related zones. Link possible zones location id based Borough. Defining simulation start. Based start point simulate day work. simulating 30 days, can use bootstrap infer distribution mean Hourly Wage day year following next steps. Calculate Hourly Wage simulated day. need resample replacement new 30 days hourly wage 3,000 times calculate mean resample. Compute 95% confident interval. Visualize estimated distribution.","code":"library(here) library(scales) library(ggplot2) library(data.table) library(lubridate) library(dplyr) library(arrow) library(infer)  options(datatable.print.nrows = 15) NycTrips <- open_dataset(here(\"raw-data/trip-data\"))  nrow(NycTrips) |> scales::comma() |> paste0(\" rows\") #> [1] \"424,389,806 rows\" LocationsMeanDistance <-   NycTrips |>   group_by(PULocationID, DOLocationID) |>   summarize(trip_miles_mean = mean(trip_miles)) |>   collect() |>   as.data.table()  LocationsMeanDistance #>        PULocationID DOLocationID trip_miles_mean #>               <int>        <int>           <num> #>     1:          170          161        1.151628 #>     2:          237          161        1.215804 #>     3:          262          229        2.199780 #>     4:          229          141        1.158538 #>     5:          263           79        5.179522 #>    ---                                           #> 66173:          199          197        9.950000 #> 66174:          153          154       31.880000 #> 66175:          184          149       32.550000 #> 66176:           81          111       25.640000 #> 66177:          185          105       21.180000 ClosestZone <-      # We are bind the same table after exchanging the id columns   # to make sure that all ids are present in both column for any   # pair of ids   rbind(LocationsMeanDistance,         LocationsMeanDistance[, .(PULocationID = DOLocationID,                                   DOLocationID = PULocationID,                                   trip_miles_mean)]      # We need to make sure to place the lower distances at the top     )[order(     # This expression help me to place distances between the same location     # at the bottom of the list with needing to open another []     (PULocationID == DOLocationID),      # Then we just need to pass the distance column     trip_miles_mean     ),           # This expression will select the first row of the data.table     # for each PULocationID to avoid duplication     .SD[1L],     by = \"PULocationID\"        # To end the process we just need to create named vector   # that we will use to return the closest location for any  id   ][, setattr(DOLocationID, \"names\", PULocationID)]   head(ClosestZone) #> 105 228  87 209 153 128  #> 228 105 209  87 128 153 ValidZoneCodes <- fread(   here(\"raw-data/taxi_zone_lookup.csv\"),   colClasses = c(\"integer\",                  \"character\",                  \"character\",                  \"character\") )[Borough %chin% c(\"Manhattan\", \"Brooklyn\", \"Queens\")] BoroughZones <-   ValidZoneCodes[, .(LocationID,                      id_list = list(LocationID)),                  by = \"Borough\"]  head(BoroughZones) #>    Borough LocationID               id_list #>     <char>      <int>                <list> #> 1:  Queens          2  2, 7, 8, 9,10,15,... #> 2:  Queens          7  2, 7, 8, 9,10,15,... #> 3:  Queens          8  2, 7, 8, 9,10,15,... #> 4:  Queens          9  2, 7, 8, 9,10,15,... #> 5:  Queens         10  2, 7, 8, 9,10,15,... #> 6:  Queens         15  2, 7, 8, 9,10,15,... # Repeating the experiment to create confident intervals NumRepetitions <- 30L  # Defining the seed set.seed(1558)  # Defining the starting point of each repetition RandomStartPoint <- data.table(   simulation_day = 1:NumRepetitions,   PULocationID = sample(ValidZoneCodes$LocationID, NumRepetitions, replace = TRUE),   hours_to_work = sample(8:12, NumRepetitions, replace = TRUE),   start_time = make_datetime(     year = sample(c(2022L, 2023L), NumRepetitions, replace = TRUE),     month = sample(1:12, NumRepetitions, replace = TRUE),     day = sample(1:31, NumRepetitions, replace = TRUE),     hour = sample(0:23, NumRepetitions, replace = TRUE)   ) )  head(RandomStartPoint) #>    simulation_day PULocationID hours_to_work          start_time #>             <int>        <int>         <int>              <POSc> #> 1:              1           82             8 2023-06-05 22:00:00 #> 2:              2          216            10 2022-08-30 23:00:00 #> 3:              3          149             8 2022-05-27 02:00:00 #> 4:              4           91            10 2022-11-22 04:00:00 #> 5:              5          219            10 2022-03-31 21:00:00 #> 6:              6          108            12 2023-03-29 14:00:00 BaseLineSimulation <-   RandomStartPoint[     , simulate_trips(NycTrips,                      start_datetime = start_time,                      start_zone = PULocationID,                      minutes_next_trip = 6L,                      end_datetime = start_time + hours(hours_to_work),                      valid_end_zones = ValidZoneCodes$LocationID,                      closest_zone = ClosestZone,                      borough_zones = BoroughZones),     by = \"simulation_day\"   ][RandomStartPoint, on = \"simulation_day\"] SimulationHourlyWage <-   BaseLineSimulation[, .(`Driver Pay` = sum(s_driver_pay),                          `Tips` = sum(s_tips),                          `Hours Worked` =                             difftime(max(s_dropoff_datetime),                                     min(s_request_datetime),                                     units = \"hours\") |>                            as.double()),                      by = \"simulation_day\"]  SimulationHourlyWage[, `Hourly Wage` := (`Driver Pay` + Tips) / `Hours Worked`]  SimulationHourlyWage[order(-`Hourly Wage`)] #>     simulation_day Driver Pay  Tips Hours Worked Hourly Wage #>              <int>      <num> <num>        <num>       <num> #>  1:             27     561.86 48.95    10.459722    58.39639 #>  2:             17     431.23 46.57     9.191667    51.98187 #>  3:              2     541.88 17.76    10.981111    50.96388 #>  4:              1     544.42 30.39    12.515833    45.92663 #>  5:             10     352.58 22.78     8.190278    45.82995 #> ---                                                          #> 26:             16     396.42 25.83    11.375556    37.11907 #> 27:              4     352.79  4.00    10.151111    35.14788 #> 28:             12     280.80  6.73     8.183611    35.13486 #> 29:              5     391.17 25.81    12.001111    34.74512 #> 30:             30     296.46  3.00     9.040278    33.12509 set.seed(1586) BootstrapHourlyWage <-   specify(SimulationHourlyWage,           `Hourly Wage` ~ NULL) |>   generate(reps = 3000, type = \"bootstrap\") |>   calculate(stat = \"mean\")  BootstrapHourlyWage #> Response: Hourly Wage (numeric) #> # A tibble: 3,000 × 2 #>    replicate  stat #>        <int> <dbl> #>  1         1  42.9 #>  2         2  39.9 #>  3         3  41.6 #>  4         4  43.7 #>  5         5  40.5 #>  6         6  40.8 #>  7         7  41.1 #>  8         8  42.9 #>  9         9  41.3 #> 10        10  40.5 #> # ℹ 2,990 more rows BootstrapInterval <-    get_ci(BootstrapHourlyWage,           level = 0.95,          type = \"percentile\")  BootstrapInterval #> # A tibble: 1 × 2 #>   lower_ci upper_ci #>      <dbl>    <dbl> #> 1     39.9     43.7 visualize(BootstrapHourlyWage)+   shade_ci(endpoints = BootstrapInterval,            color = \"#2c77BF\",            fill = \"#2c77BF\")+   annotate(geom = \"text\",            y = 400,            x = c(BootstrapInterval[1L][[1L]] - 0.4,                  BootstrapInterval[2L][[1L]] + 0.4),            label = unlist(BootstrapInterval) |> comma(accuracy = 0.01))+   labs(title = \"Mean Hourly Wage Distribution\",        subtitle = paste0(\"Mean: \", round(mean(SimulationHourlyWage$`Hourly Wage`), 2),                          \", Median: \", round(median(SimulationHourlyWage$`Hourly Wage`), 2)),        y = \"Count\")+   theme_light()+   theme(panel.grid.minor.y = element_blank(),         panel.grid.major.y = element_blank(),         plot.title = element_text(face = \"bold\"),         axis.title.x = element_blank())"},{"path":"/articles/02-business-understanding.html","id":"business-case","dir":"Articles","previous_headings":"","what":"Business Case","title":"02 - Business Understanding","text":"base driver’s pay increases costs like gas, time car’s maintenance best way increase total earning increasing amount tips drivers receive customers. Based 424,389,806 trips recorded 2022 2023, drivers received $469,726,156 tips 5% total earnings year, example driver improves strategy increase tips 20% current earning earning $1,334.08 extra monthly works 8 hours day, 5 days week earns $41.69 hourly.","code":"NycTrips |>   summarize(number_of_trips = sum(!is.na(PULocationID)),             trips_with_tips = sum(tips > 0, na.rm = TRUE),             driver_net_earning = sum(driver_pay + tips, na.rm = TRUE),             tips = sum(tips, na.rm = TRUE)) |>   collect() |>   as.data.table() |>   (\\(dt)  dt[, .(number_of_trips = comma(number_of_trips),                  trips_with_tips = comma(trips_with_tips),                  trips_with_tips_pct = percent(trips_with_tips / number_of_trips),                  driver_net_earning = dollar(driver_net_earning),                  tips = dollar(tips),                  tips_pct = percent(tips/driver_net_earning))           ][, melt(.SD,                     measure.vars = names(.SD),                    variable.name = \"Summary Variable\",                    value.name = \"Total\",                    variable.factor = FALSE)]    )() #>       Summary Variable          Total #>                 <char>         <char> #> 1:     number_of_trips    424,389,806 #> 2:     trips_with_tips     84,493,591 #> 3: trips_with_tips_pct            20% #> 4:  driver_net_earning $8,543,381,798 #> 5:                tips   $469,726,156 #> 6:            tips_pct             5%"},{"path":"/articles/02-business-understanding.html","id":"projects-side-benefits","dir":"Articles","previous_headings":"","what":"Project’s side benefits","title":"02 - Business Understanding","text":"’s also important consider Taxi companies customers can benefit drivers earning tips several ways: Employee Satisfaction: Higher tips can lead increased job satisfaction among drivers, can improve performance reduce turnover rates. Company Reputation: drivers earning tips, indicate providing excellent service, can enhance company’s reputation. Customer Retention: Satisfied drivers likely provide better customer service, can lead higher customer retention rates. Better Service: Drivers earn tips often provide better service. mean cleaner vehicles, courteous behavior, enjoyable ride overall. Driver Availability: tip earnings high, attract drivers work, potentially reducing wait times customers. Safety: Drivers worried earnings might less likely engage risky behaviors (like speeding working overly long shifts) earn .","code":""},{"path":"/articles/02-business-understanding.html","id":"deliverables","dir":"Articles","previous_headings":"","what":"Deliverables","title":"02 - Business Understanding","text":"Shiny app assists drivers focusing attention better trips.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Angel Feliz. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Feliz (2024). project.nyc.taxi: Data Analysis Project NYC Taxi Drivers’ Earnings. R package version 0.0.99.","code":"@Manual{,   title = {project.nyc.taxi: A Data Analysis Project On NYC Taxi Drivers’ Earnings},   author = {Angel Feliz},   year = {2024},   note = {R package version 0.0.99}, }"},{"path":"/index.html","id":"projectnyctaxi","dir":"","previous_headings":"","what":"A Data Analysis Project On NYC Taxi Drivers’ Earnings","title":"A Data Analysis Project On NYC Taxi Drivers’ Earnings","text":"package, find tools needed reproduce analysis done project help taxi drivers NYC implement strategies can help increase earnings.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Data Analysis Project On NYC Taxi Drivers’ Earnings","text":"can install development version project.nyc.taxi like :","code":"# FILL THIS IN! HOW CAN PEOPLE INSTALL YOUR DEV PACKAGE?"},{"path":"/index.html","id":"data-used","dir":"","previous_headings":"","what":"Data used","title":"A Data Analysis Project On NYC Taxi Drivers’ Earnings","text":"project use subset data available TLC Trip Record Data. focus attention 2022 2023 data available High Volume -Hire Vehicle can see .  row represents single trip FHV dispatched one NYC’s licensed High Volume FHV bases column next meaning based data dictionary avaible web page.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/reference/BaseLineSimulation.html","id":null,"dir":"Reference","previous_headings":"","what":"BaseLineSimulation — BaseLineSimulation","title":"BaseLineSimulation — BaseLineSimulation","text":"Trips returned runing simulation.","code":""},{"path":"/reference/BaseLineSimulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BaseLineSimulation — BaseLineSimulation","text":"","code":"BaseLineSimulation"},{"path":"/reference/BaseLineSimulation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"BaseLineSimulation — BaseLineSimulation","text":"data frame 6 variables: simulation_day Sample date s_PULocationID TLC Taxi Zone trip began s_DOLocationID TLC Taxi Zone trip ended s_request_datetime Date time passenger requested picked s_dropoff_datetime date time trip drop-s_driver_pay Total driver pay (including tolls tips net commission, surcharges, taxes) s_tips Total amount tips received passenger PULocationID Start zone simulation day hours_to_work number hour work simulation day start_time Start date time simulation day","code":""},{"path":"/reference/BaseLineSimulation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"BaseLineSimulation — BaseLineSimulation","text":"TLC Trip Record Data","code":""},{"path":"/reference/simulate_trips.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulates a day of work — simulate_trips","title":"Simulates a day of work — simulate_trips","text":"function sample data.frame arrow connection trips needed complete working day form taxi driver.","code":""},{"path":"/reference/simulate_trips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulates a day of work — simulate_trips","text":"","code":"simulate_trips(   arrow_con,   start_datetime,   start_zone,   minutes_next_trip,   end_datetime,   valid_end_zones,   closest_zone,   borough_zones )"},{"path":"/reference/simulate_trips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulates a day of work — simulate_trips","text":"arrow_con arrow connection trips sample start_datetime date associated time taxi driver start work start_zone number select starting zone minutes_next_trip integer define limit time needed extending filters end_datetime date associated time taxi driver stop looking new trips valid_end_zones vector number defining possible zones drive closest_zone named vector pointing closest zone taxi driver waiting need trip order start trip borough_zones data.frame integer column LocationID possible zone ids list column id_list contain zones ids related LocationID's borough","code":""},{"path":"/reference/simulate_trips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulates a day of work — simulate_trips","text":"data.frame","code":""},{"path":"/reference/simulate_trips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulates a day of work — simulate_trips","text":"","code":"# Let's defining 3 zones valid_zones <- 1:3  # Then define the closest zone to each zone closest_zones <- c(2L, 1L, 2L) names(closest_zones) <- valid_zones  # All the zones are from the same borough borough_zones <- data.frame(   LocationID = valid_zones,   id_list = I(list(valid_zones, valid_zones, valid_zones)) )  start_datetime <- lubridate::make_datetime(2023L, 5L, 18L, 8L) start_zone <- 1L  ArrowDf <- data.frame(   year = 2023L,   month = 5L,   PULocationID = c(        # Let's simulate a trip in starting zone   1L,      # Then we can start in the closest zone   2L,      # Finally we can take a trip at borough level   3L   ),      DOLocationID = c(3L, 1L, 1L),      request_datetime = c(    start_datetime + lubridate::minutes(2L),    start_datetime + lubridate::minutes(20L + 7L),    start_datetime + lubridate::minutes(37L + 14L)   ),   dropoff_datetime = c(    start_datetime + lubridate::minutes(20L),    start_datetime + lubridate::minutes(37L),    lubridate::make_datetime(2023L, 5L, 18L, 9L, 1L)   ),   driver_pay = 10,   tips = 2  ) |>   arrow::arrow_table(schema = arrow::schema(     year = arrow::int32(),     month = arrow::int32(),     PULocationID = arrow::int64(),     DOLocationID = arrow::int64(),     request_datetime = arrow::timestamp(unit = \"us\"),     dropoff_datetime = arrow::timestamp(unit = \"us\"),     driver_pay = double(),     tips = double()   ))   simulate_trips(ArrowDf,                start_datetime = start_datetime,                start_zone = start_zone,                minutes_next_trip = 6L,                end_datetime = start_datetime + lubridate::hours(1L),                valid_end_zones = valid_zones,                closest_zone = closest_zones,                borough_zones = borough_zones) #> # A tibble: 3 × 6 #>   s_PULocationID s_DOLocationID s_request_datetime  s_dropoff_datetime  #>            <int>          <int> <dttm>              <dttm>              #> 1              1              3 2023-05-18 04:02:00 2023-05-18 04:20:00 #> 2              2              1 2023-05-18 04:27:00 2023-05-18 04:37:00 #> 3              3              1 2023-05-18 04:51:00 2023-05-18 05:01:00 #> # ℹ 2 more variables: s_driver_pay <dbl>, s_tips <dbl>"}]
